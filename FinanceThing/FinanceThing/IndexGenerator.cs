using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FinanceThing
{
    class IndexGenerator
    {
        static string Layout = "<tr><td valign=\"top\"><img src=\"/icons/{0}.gif\" alt=\"[{1}]\"></td><td><a href=\"{2}\">{3}</a></td><td align=\"right\">{4}  </td><td align=\"right\">  {5} </td><td>&nbsp;</td></tr>";

        public static string FromDirectory(string path)
        {
            DirectoryInfo dir = new DirectoryInfo(path);
            StringBuilder ret = new StringBuilder();

            ret.AppendLine("<table>");
            ret.AppendLine("<tr><th valign=\"top\"><img src=\"/icons/blank.gif\" alt=\"[ICO]\"></th><th>Name</th><th>Last modified</th><th>Size</th><th>Description</th></tr>");
            ret.AppendLine("<tr><th colspan=\"5\"><hr></th></tr>");

            foreach (var subdir in dir.GetDirectories())
            {
                ret.AppendLine(string.Format(Layout, "folder", "DIR", subdir.Name + "/", subdir.Name + "/", subdir.LastWriteTime.ToUniversalTime().ToString("yyyy-MM-dd HH:mm"), "-"));
            }

            foreach (var file in dir.GetFiles())
            {
                if(file.Name != "index.html")
                    ret.AppendLine(string.Format(Layout, "unknown", "   ", file.Name, file.Name, file.LastWriteTime.ToUniversalTime().ToString("yyyy-MM-dd HH:mm"), GetProperLength(file.Length)));
            }

            ret.AppendLine("<tr><th colspan=\"5\"><hr></th></tr>");
            ret.AppendLine("</table>");
            ret.AppendLine(string.Format("<address>Generated by topkek_2000 at {0}</address>", DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm")));

            return ret.ToString();
        }

        public static string GetProperLength(long length)
        {
            double K = 1024;
            double M = K * K;
            double G = K * M;

            if (length > G)
                return (length / G).ToString("0.0") + " G";

            if (length > M)
                return (length / M).ToString("0.0") + " M";

            if (length > K)
                return (length / K).ToString("0.0") + " K";

            return length + " B";
        }
    }
}
